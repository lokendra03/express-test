1. Get the application URL by running these commands:

{{- if .Values.ingress.enabled }}
   # Access the application via Ingress
   {{- range .Values.ingress.hosts }}
     {{- range .paths }}
       echo "Ingress URL: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ .host }}{{ .path }}"
     {{- end }}
   {{- end }}

{{- else if contains "NodePort" .Values.service.type }}
   # Get the NodePort and external node IP
   export NODE_PORT=$(kubectl get --namespace {{ .Values.namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "backend-helm.fullname" . }}) && \
   export NODE_IP=$(kubectl get nodes --namespace {{ .Values.namespace }} -o jsonpath="{.items[0].status.addresses[0].address}") && \
   echo "Access the application at: http://$NODE_IP:$NODE_PORT"

{{- else if contains "LoadBalancer" .Values.service.type }}
   # Wait for the LoadBalancer IP to be available
   echo "Waiting for LoadBalancer IP..."
   kubectl get --namespace {{ .Values.namespace }} svc -w {{ include "backend-helm.fullname" . }} && \
   export SERVICE_IP=$(kubectl get svc --namespace {{ .Values.namespace }} {{ include "backend-helm.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}") && \
   echo "Access the application at: http://$SERVICE_IP:{{ .Values.service.port }}"

{{- else if contains "ClusterIP" .Values.service.type }}
   # Use port-forwarding to access the service locally
   export POD_NAME=$(kubectl get pods --namespace {{ .Values.namespace }} -l "app.kubernetes.io/name={{ include "backend-helm.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}") && \
   export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Values.namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}") && \
   echo "Forwarding port... Access the application at: http://127.0.0.1:8080" && \
   kubectl --namespace {{ .Values.namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
